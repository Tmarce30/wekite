<div class="container">
  <div class="row">
    <div class="col-xs-12">
      <%= render "spot-avatar", spot: @spot %>
    </div>
</div>

  <p class="spot-description"><%= @spot.description %></p>
  <p class="spot-address"><%= @spot.address %></p>
  <% if user_signed_in? %>
    <div class="favorites">
      <% if @favorite.id.nil? %>
        <%= simple_form_for [@spot, @favorite] do |f| %>
          <%= f.button :submit, class: "btn fa-heart" %>
        <% end %>
      <% else %>
        <%= link_to "Delete", favorite_path(@favorite, :redirect_url => spot_path(@spot)), class: "btn btn-danger", method: :delete %>
        <% end %>
    </div>
  <% else %>
      <%= simple_form_for [@spot, @favorite] do |f| %>
        <%= f.button :submit, class: "btn fa-heart" %>
      <% end %>
  <% end %>
    <% if user_signed_in? %>
      <div class="checkins">
      <% if @checkin.id.nil? %>
        <%= simple_form_for [@spot, @checkin] do |f| %>
          <%# f.input :date %>
          <%= f.input :date, collection: @possible_dates, selected: @possible_dates[0] %>
          <%= f.button :submit, class: "btn fa-heart" %>
        <% end %>
      <% else %>
        <%= link_to "Checkout", checkin_path(@checkin), class: "btn btn-danger", method: :delete %>
        <% end %>
    </div>
  <% else %>
      <%= simple_form_for [@spot, @checkin] do |f| %>
        <%= f.button :submit, class: "btn fa-heart" %>
      <% end %>
  <% end %>
  <div class="spot-reviews">
        <%= simple_form_for [@spot, @review] do |f| %>
        <%= f.label :comment %>
        <%= f.input :comment, label:false, input_html: {class: "form-control comment"}%>
        <%= f.label :rating %>
        <%= f.input :rating, label:false, input_html: {class: "form-control rating"} %>
        <%= f.button :submit, class: "btn btn-danger" %>
        <% end %>
        <% @spot.reviews.each do |review| %>
        <p><%= review.rating %></p>
        <p><%= review.comment %></p>
        <% end %>
      </div>
        <%= simple_form_for @picture do |f| %>
        <%= f.input :photos, as: :attachinary %>
        <%= f.input :spot_id, as: :hidden, input_html: {value: @spot.id} %>
        <%= f.button :submit %>
        <% end %>
        <% @spot.pictures.each do |picture| %>
          <% picture.photos.each do |photo| %>
              <p><%= cl_image_tag photo.path, width: 200, height: 300, crop: :fill %></p>
          <% end %>
        <% end %>
</div>

<div id="map" style="width: 100%; height: 400px;"></div>

<% content_for(:after_js) do %>
  <%= javascript_tag do %>
    var styles = [
    {
        "featureType": "administrative",
        "elementType": "labels.text.fill",
        "stylers": [
            {
                "color": "#444444"
            }
        ]
    },
    {
        "featureType": "landscape",
        "elementType": "all",
        "stylers": [
            {
                "color": "#f2f2f2"
            }
        ]
    },
    {
        "featureType": "poi",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "road",
        "elementType": "all",
        "stylers": [
            {
                "saturation": -100
            },
            {
                "lightness": 45
            }
        ]
    },
    {
        "featureType": "road.highway",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "simplified"
            }
        ]
    },
    {
        "featureType": "road.arterial",
        "elementType": "labels.icon",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "transit",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "water",
        "elementType": "all",
        "stylers": [
            {
                "color": "#002C6A"
            },
            {
                "visibility": "on"
            }
        ]
    }];
    var handler = Gmaps.build('Google');
    handler.buildMap({
      provider: {
        styles: styles
       },
      internal: { id: 'map' } }, function() {
      markers = handler.addMarkers(<%= raw @hash.to_json %>);
      handler.bounds.extendWith(markers);
      handler.fitMapToBounds();
      if (markers.length == 0) {
        handler.getMap().setZoom(3);
      } else if (markers.length == 1) {
        handler.getMap().setZoom(14);
      }
    });
  <% end %>
<% end %>
